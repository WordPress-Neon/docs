"use strict";(self.webpackChunkwpn_docs=self.webpackChunkwpn_docs||[]).push([[294],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),i=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=i(n),m=a,v=d["".concat(l,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(v,s(s({ref:t},u),{},{components:n})):r.createElement(v,s({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,s[1]=p;for(var i=2;i<o;i++)s[i]=n[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>i});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},s="Overview",p={unversionedId:"ajax/routes",id:"ajax/routes",title:"Overview",description:"You can either register your routes in the AppServiceProvider class or use require_once . '/routes.php' to organise them",source:"@site/docs/ajax/routes.md",sourceDirName:"ajax",slug:"/ajax/routes",permalink:"/docs/ajax/routes",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebar",previous:{title:"SVG Support",permalink:"/docs/plugins/svg-support"},next:{title:"Validation",permalink:"/docs/ajax/validation"}},l={},i=[{value:"Callback",id:"callback",level:3},{value:"Validating the Request",id:"validating-the-request",level:3},{value:"Using Validated Data",id:"using-validated-data",level:3}],u={toc:i};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,"You can either register your routes in the ",(0,a.kt)("inlineCode",{parentName:"p"},"AppServiceProvider")," class or use ",(0,a.kt)("inlineCode",{parentName:"p"},"require_once . '/routes.php'")," to organise them\ninto a routes file."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="ajax-routes.php"',title:'"ajax-routes.php"'},"<?php\n\nuse App\\Http\\Controllers\\GetPostsController;\nuse WPN\\Http\\Route;\n\nRoute::create('get_posts', GetPostsController::class);\n")),(0,a.kt)("h3",{id:"callback"},"Callback"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="GetPostsController.php"',title:'"GetPostsController.php"'},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse WPN\\Http\\Callback;\nuse WPN\\Http\\Response;\n\nclass GetPostsController implements Callback\n{\n    public function __invoke(): Response\n    {\n        $post = get_post($_REQUEST['post_id']);\n        \n        return new Response(['status' => 200, 'data' => $post]);\n    }\n}\n")),(0,a.kt)("h3",{id:"validating-the-request"},"Validating the Request"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="GetPostsRequest.php"',title:'"GetPostsRequest.php"'},"<?php\n\nnamespace App\\Http\\Requests;\n\nuse WPN\\Support\\Request;\n\nclass GetPostsRequest extends Request\n{\n    protected function rules(): array\n    {\n        return [\n            'post_id' => ['required', 'int'],\n        ];\n    }\n}\n")),(0,a.kt)("h3",{id:"using-validated-data"},"Using Validated Data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="GetPostsController.php"',title:'"GetPostsController.php"'},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Http\\Requests\\GetPostsRequest;\nuse WPN\\Http\\Callback;\nuse WPN\\Http\\Response;\n\nclass GetPostsController implements Callback\n{\n    public function __invoke(): Response\n    {\n        $request = (new GetPostsRequest())->validated();\n        \n        $post = get_post($request['post_id']);\n        \n        return new Response(['status' => 200, 'data' => $post]);\n    }\n}\n")))}c.isMDXComponent=!0}}]);