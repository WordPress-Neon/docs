"use strict";(self.webpackChunkwpn_docs=self.webpackChunkwpn_docs||[]).push([[448],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),l=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,y=d["".concat(a,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(y,p(p({ref:t},c),{},{components:n})):r.createElement(y,p({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,p=new Array(i);p[0]=d;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:o,p[1]=s;for(var l=2;l<i;l++)p[l]=n[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>p,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:1,description:"Generate custom post types with WPN",pagination_prev:"getting-started/intro",pagination_label:"Post Types"},p="Post Types",s={unversionedId:"post-types",id:"post-types",title:"Post Types",description:"Generate custom post types with WPN",source:"@site/docs/post-types.md",sourceDirName:".",slug:"/post-types",permalink:"/docs/post-types",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Generate custom post types with WPN",pagination_prev:"getting-started/intro",pagination_label:"Post Types"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/getting-started/intro"},next:{title:"AJAX",permalink:"/docs/ajax/routes"}},a={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Registering a post type",id:"registering-a-post-type",level:2},{value:"Post type args",id:"post-type-args",level:2}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"post-types"},"Post Types"),(0,o.kt)("h2",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,"While developing your theme, you may need to create your own specific content type: for example, products for an\ne-commerce website, assignments for an e-learning website, or movies for a review website."),(0,o.kt)("p",null,"Using Custom Post Types, you can register your own post type. Once a custom post type is registered,\nit gets a new top-level administrative screen that can be used to manage and create posts of that type."),(0,o.kt)("admonition",{title:"Flush Permalinks",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"WPN will not flush permalinks as this has a negative impact on performance. After you have registered a public post\ntype you should flush permalinks yourself by simply saving permalink settings in the wp-admin menu.")),(0,o.kt)("h2",{id:"registering-a-post-type"},"Registering a post type"),(0,o.kt)("p",null,"Post types can be registered within a service provider. In this example we are using the ",(0,o.kt)("inlineCode",{parentName:"p"},"AppServiceProvider"),"."),(0,o.kt)("p",null,"Calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"register")," method of the ",(0,o.kt)("inlineCode",{parentName:"p"},"WPN\\Support\\PostType")," class will handle the post type registration with the given parameters.\nHere we will create a post type called ",(0,o.kt)("inlineCode",{parentName:"p"},"product")," ",(0,o.kt)("em",{parentName:"p"},"(names are slugified when creating the post type)")," which supports\ntitles, content and featured images."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="AppServiceProvider.php"',title:'"AppServiceProvider.php"'},"<?php\n\nnamespace App\\Providers;\n\nuse WPN\\App;\nuse WPN\\Providers\\ServiceProvider;\nuse WPN\\Support\\PostType;\n\nclass AppServiceProvider extends ServiceProvider {\n    protected function boot( App $app ) {\n        $app->init( __DIR__ . '/config.php' );\n        \n        //highlight-start\n        PostType::register( 'Products',\n            supports: [\n                'title',\n                'editor',\n                'thumbnail'\n            ],\n        );\n        //highlight-end\n    }\n}\n")),(0,o.kt)("h2",{id:"post-type-args"},"Post type args"),(0,o.kt)("p",null,"The third parameter of the ",(0,o.kt)("inlineCode",{parentName:"p"},"register")," method allows for an array of arguments for the post type. For an exhaustive list\nof arguments available, you can visit the ",(0,o.kt)("a",{parentName:"p",href:"https://developer.wordpress.org/reference/functions/register_post_type/#parameters"},"WordPress' documentation"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php",metastring:'title="AppServiceProvider.php"',title:'"AppServiceProvider.php"'},"<?php\n\nnamespace App\\Providers;\n\nuse WPN\\App;\nuse WPN\\Providers\\ServiceProvider;\nuse WPN\\Support\\PostType;\n\nclass AppServiceProvider extends ServiceProvider {\n    protected function boot( App $app ) {\n        $app->init( __DIR__ . '/config.php' );\n        \n        PostType::register( 'Products',\n            supports: [\n                'title',\n                'editor',\n                'thumbnail'\n            ],\n            //highlight-start\n            args: [\n                'show_in_rest' => false \n            ]\n            //highlight-end\n        );\n    }\n}\n")))}u.isMDXComponent=!0}}]);