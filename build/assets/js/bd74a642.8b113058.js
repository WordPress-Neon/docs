"use strict";(self.webpackChunkwpn_docs=self.webpackChunkwpn_docs||[]).push([[916],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=l(t),m=i,h=c["".concat(u,".").concat(m)]||c[m]||d[m]||a;return t?r.createElement(h,o(o({ref:n},p),{},{components:t})):r.createElement(h,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=c;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3938:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={sidebar_position:1,description:"Registering admin menus with WPN",pagination_label:"Menus - The Basics"},o="The Basics",s={unversionedId:"menus/intro",id:"menus/intro",title:"The Basics",description:"Registering admin menus with WPN",source:"@site/docs/menus/intro.md",sourceDirName:"menus",slug:"/menus/intro",permalink:"/docs/menus/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Registering admin menus with WPN",pagination_label:"Menus - The Basics"},sidebar:"sidebar",previous:{title:"Menus",permalink:"/docs/wp-menu/custom-fields"},next:{title:"Menus - Core Menus",permalink:"/docs/menus/core-submenus"}},u={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Register Admin Menus",id:"register-admin-menus",level:2},{value:"Admin Menu Callbacks",id:"admin-menu-callbacks",level:2},{value:"Class Callback Example",id:"class-callback-example",level:3},{value:"Submenu",id:"submenu",level:2},{value:"Adding submenus to registered menu",id:"adding-submenus-to-registered-menu",level:3},{value:"Adding submenu to already declared menu",id:"adding-submenu-to-already-declared-menu",level:3}],p={toc:l};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-basics"},"The Basics"),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Administration Menus are the interfaces displayed in WordPress Administration. They allow you to add option pages\nfor your plugin or theme."),(0,i.kt)("p",null,"The Top-level menus are rendered along the left side of the WordPress Administration. Each menu may contain a set of\nSub-menus."),(0,i.kt)("p",null,"When deciding between Top-level menus and Sub-menus think carefully about the needs of your plugin as well as the\nneeds of your end users."),(0,i.kt)("h2",{id:"register-admin-menus"},"Register Admin Menus"),(0,i.kt)("p",null,"Admin menus can be register inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"boot")," method of the ",(0,i.kt)("inlineCode",{parentName:"p"},"AppServiceProvider"),". The callback for the menu can be either\na Closure or a class which ",(0,i.kt)("inlineCode",{parentName:"p"},"implements")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"WPN\\Support\\Admin\\MenuCallback")," ",(0,i.kt)("inlineCode",{parentName:"p"},"interface"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App;\n\nuse WPN\\App;\nuse WPN\\Providers\\ServiceProvider;\nuse WPN\\Support\\Admin\\Menu;\n//highlight-next-line\nuse App\\Http\\Controllers\\ThemeAdminMenu;\n\nclass AppServiceProvider extends ServiceProvider {\n    protected function boot( App $app ) {\n        $app->init( __DIR__ . '/config.php' );\n        \n        //highlight-next-line\n        Menu::register( 'Testing Menu', ThemeAdminMenu::class );\n    }\n}\n")),(0,i.kt)("p",null,"When you register your menu, you can set the ",(0,i.kt)("inlineCode",{parentName:"p"},"position")," as the 3rd parameter and the menu icon as the 4th, like so:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"Menu::register( 'Testing Menu', ThemeAdminMenu::class, 4, 'dashicons-admin-users' );\n")),(0,i.kt)("h2",{id:"admin-menu-callbacks"},"Admin Menu Callbacks"),(0,i.kt)("p",null,"Callbacks can either be a Closure or a class which ",(0,i.kt)("inlineCode",{parentName:"p"},"implements")," the ",(0,i.kt)("inlineCode",{parentName:"p"},"WPN\\Support\\Admin\\MenuCallback")," ",(0,i.kt)("inlineCode",{parentName:"p"},"interface"),"."),(0,i.kt)("h3",{id:"class-callback-example"},"Class Callback Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse WPN\\Support\\Admin\\MenuCallback;\n\nclass ThemeAdminMenu implements MenuCallback {\n    public function __invoke(): void {\n        echo '<h1>Hello</h1>';\n    }\n}\n")),(0,i.kt)("p",null,"Inside your callback function or ",(0,i.kt)("inlineCode",{parentName:"p"},"__invoke")," method, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"render_component")," helper function to render the\ntemplate for your menu."),(0,i.kt)("p",null,"If you need to save data from the menu, you should send a request to the page and deal with the request inside the callback."),(0,i.kt)("h2",{id:"submenu"},"Submenu"),(0,i.kt)("p",null,"Submenus can be added when registering the admin menu, you may also use the ",(0,i.kt)("inlineCode",{parentName:"p"},"WPN\\Support\\Admin\\Submenu")," class to register\na submenu onto an already existing menu."),(0,i.kt)("h3",{id:"adding-submenus-to-registered-menu"},"Adding submenus to registered menu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App;\n\nuse WPN\\App;\nuse WPN\\Providers\\ServiceProvider;\nuse WPN\\Support\\Admin\\Menu;\nuse App\\Http\\Controllers\\ThemeAdminMenu;\n\nclass AppServiceProvider extends ServiceProvider {\n    protected function boot( App $app ) {\n        $app->init( __DIR__ . '/config.php' );\n        \n        Menu::register( 'Testing Menu', ThemeAdminMenu::class )\n            ->submenu( 'Testing Menu', ThemeAdminMenu::class )\n            ->submenu( 'Submenu 2', function () {\n                echo '<h1>Third</h1>';\n            } );\n    }\n}\n")),(0,i.kt)("h3",{id:"adding-submenu-to-already-declared-menu"},"Adding submenu to already declared menu"),(0,i.kt)("p",null,"You can add submenus to other plugins menus by calling ",(0,i.kt)("inlineCode",{parentName:"p"},"WPN\\Support\\Admin\\Submenu"),". The 2nd parameter would be the parent\nmenu's slug. "),(0,i.kt)("p",null,"Here is an example of adding to the Woocommerce menu."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App;\n\nuse App\\Http\\Controllers\\ThemeAdminMenu;\nuse WPN\\App;\nuse WPN\\Providers\\ServiceProvider;\nuse WPN\\Support\\Admin\\Submenu;\n\nclass AppServiceProvider extends ServiceProvider {\n    protected function boot( App $app ) {\n        $app->init( __DIR__ . '/config.php' );\n\n        Submenu::register( 'My New Menu', 'woocommerce', ThemeAdminMenu::class );\n    }\n}\n")))}d.isMDXComponent=!0}}]);